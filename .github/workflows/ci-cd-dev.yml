name: CI/CD for Dev Branch

on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run docker-compose
        run: |
          docker-compose up --build -d
      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Run Frontend Unit Tests
        working-directory: frontend
        run: npm test

      - name: Setup Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Backend Dependencies
        working-directory: backend
        run: npm install

      - name: Run Backend Unit Tests
        working-directory: backend
        run: npm test

  merge-to-main:
    needs: build-and-test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request to Main
        uses: peter-evans/create-pull-request@v5
        with:
          branch: main
          title: "Merge dev into main"
          body: |
            Automatically merging changes from `dev` to `main`.
          commit-message: "chore: merge dev into main"
          delete-branch: false
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}